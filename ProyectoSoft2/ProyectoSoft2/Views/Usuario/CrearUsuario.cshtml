@model ProyectoSoft2.Models.Usuario.UsuarioViewModel

@{
    ViewBag.Title = "Crear Usuario";
}

<form class="smart-form" id="FormUsuario">
    <header><strong>Crear Usuario</strong></header>
    <br />
    <fieldset style="padding-top:10px;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <section class="col col-6">
                <strong>Informacion Personal</strong>
                <hr />
                <div class="row" style="padding:20px;">
                    <section>
                        <span>@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })</span>
                        <label class="input">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "" } })
                        </label>
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </section>
                    <section>
                        <span>@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })</span>
                        <label class="input">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        </label>
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </section>
                    <section>
                        <span>@Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label" })</span>
                        <label class="input">
                            <i class="icon-append fa fa-calendar"></i>
                            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                        </label>
                        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                    </section>


                </div>
                <strong>Cuenta de Usuario</strong>
                <hr />
                <div class="row" style="padding:20px;">
                    <section>
                        <span>@Html.LabelFor(model => model.Centro, htmlAttributes: new { @class = "control-label" })</span>
                        <label class="input">
                            @Html.DropDownListFor(model => model.Centro, new SelectList(ViewBag.ListaCentros, "Value", "Text"), "", new { @class = "form-control select2", style = "width:100%;" })
                        </label>
                        @Html.ValidationMessageFor(model => model.Centro, null, new { @class = "text-danger" })
                    </section>
                    <section>
                        <span>@Html.LabelFor(model => model.RoleUsuario, htmlAttributes: new { @class = "control-label" })</span>
                        <label class="input">
                            @Html.DropDownListFor(model => model.RoleUsuario, new SelectList(ViewBag.ListaTipoUsuario, "Value", "Text"), "", new { @class = "form-control select2", style = "width:100%;" })
                        </label>
                        @Html.ValidationMessageFor(model => model.RoleUsuario, null, new { @class = "text-danger" })
                    </section>
                    
                     <section>
                        <span>@Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })</span>
                        <label class="input">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        </label>
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </section>
                    <section>
                        <span>@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })</span>
                        <label class="input">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        </label>
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </section>
                    <section>
                        <span>@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })</span>
                        <label class="input">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        </label>
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </section>
                    <section>
                        <span>@Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })</span>
                        <label class="input">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        </label>
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </section>

                </div>
                <a href="/Usuario/Index" class="btn btn-default btn-lg "><i class="fa fa-arrow-left"></i> </a>
                <a class="btn btn-success btn-lg" onclick="CrearUsuario()"> Crear Usuario</a>
               

            </section>
        </div>
    </fieldset>
    
</form>    




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        //$("#RoleUsuario").select2();

        $("#BirthDate")
            .datepicker({
                dateFormat: 'dd/M/yy',
                changeMonth: true,
                changeYear: true,
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>'
            });


        function CrearUsuario() {
           
            var $result = $("#FormUsuario").valid();
            if (!$result) { return false;}

            LoadWaitNotification();
                $.ajax({
                    url: "/Usuario/CrearUsuario",
                    type: 'POST',
                    dataType: 'json',
                    data: $('#FormUsuario').serialize(),
                    success: function (data) {

                        if (data.Estado) {
                            ShowboxSuccess(data.Mensaje, data.Titulo);
                            new $.fn.dataTable.Api("#IdTabla").ajax.reload();
                            $("#MyModal").modal("hide");
                        } else ShowboxError(data.Mensaje, data.Titulo);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        alert(textStatus + ": crear contrato");
                        UnloadWaitNotification();
                    },
                    complete: function () { UnloadWaitNotification(); }
                });

            

        };




    </script>

}


